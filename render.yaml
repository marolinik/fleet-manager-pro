services:
  # Backend API
  - type: web
    name: fleet-manager-api
    runtime: node
    region: frankfurt
    plan: starter
    buildCommand: cd backend && npm install && npm run build && npm run prisma:generate
    startCommand: cd backend && npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: fleet-db
          property: connectionString
      - key: AUTH0_DOMAIN
        sync: false
      - key: AUTH0_AUDIENCE
        sync: false
      - key: AUTH0_CLIENT_ID
        sync: false
      - key: AUTH0_CLIENT_SECRET
        sync: false
      - key: CLOUDINARY_CLOUD_NAME
        sync: false
      - key: CLOUDINARY_API_KEY
        sync: false
      - key: CLOUDINARY_API_SECRET
        sync: false
      - key: SENDGRID_API_KEY
        sync: false
      - key: EMAIL_FROM
        value: noreply@fleetmanager.com
      - key: JWT_SECRET
        generateValue: true
      - key: FRONTEND_URL
        value: https://fleet-manager-app.onrender.com
    healthCheckPath: /health

  # Frontend App
  - type: web
    name: fleet-manager-app
    runtime: static
    region: frankfurt
    plan: starter
    buildCommand: cd frontend && npm install && npm run build
    staticPublishPath: ./frontend/dist
    headers:
      - path: /*
        name: X-Frame-Options
        value: DENY
      - path: /*
        name: X-Content-Type-Options
        value: nosniff
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    envVars:
      - key: VITE_AUTH0_DOMAIN
        sync: false
      - key: VITE_AUTH0_CLIENT_ID
        sync: false
      - key: VITE_API_URL
        value: https://fleet-manager-api.onrender.com

databases:
  - name: fleet-db
    region: frankfurt
    plan: starter
    databaseName: fleet_manager
    user: fleet_admin
    ipAllowList: []